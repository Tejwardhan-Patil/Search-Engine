name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: search_engine_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U user" 
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.19'

    - name: Install Go dependencies
      run: go mod download

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '17'

    - name: Build Java project
      run: ./gradlew build

    - name: Run Python Unit Tests
      run: python -m unittest discover -s tests/unit_tests -p '*_test.py'

    - name: Run Go Unit Tests
      run: go test ./...

    - name: Run Java Unit Tests
      run: ./gradlew test

    - name: Lint Python Code
      run: |
        pip install flake8
        flake8 crawler/ query_processor/ search_interface/ scripts/

    - name: Lint Go Code
      run: gofmt -l .

    - name: Lint Java Code
      run: ./gradlew check

    - name: Test Coverage Report (Python)
      run: |
        pip install coverage
        coverage run -m unittest discover -s tests/unit_tests -p '*_test.py'
        coverage report -m

    - name: Test Coverage Report (Go)
      run: go test -cover ./...

    - name: Test Coverage Report (Java)
      run: ./gradlew jacocoTestReport

  integration_tests:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Integration Tests
      run: python -m unittest discover -s tests/integration_tests -p '*_test.py'
      
  e2e_tests:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run End-to-End Tests
      run: python -m unittest discover -s tests/e2e_tests -p '*_test.py'